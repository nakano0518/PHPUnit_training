{"filter":false,"title":"WeatherMonitorTest.php","tooltip":"/PHPUnit/tests/WeatherMonitorTest.php","undoManager":{"mark":11,"position":11,"stack":[[{"start":{"row":0,"column":0},"end":{"row":45,"column":0},"action":"insert","lines":["<?php","","use PHPUnit\\Framework\\TestCase;","","class WeatherMonitorTest extends TestCase","{","    public function tearDown(): void","    {","        Mockery::close();","    }","    ","    public function testCorrectAverageIsReturned()","    {","        $service = $this->createMock(TemperatureService::class);","        ","        $map = [","            ['12:00', 20],","            ['14:00', 26]","        ];","        ","        $service->expects($this->exactly(2))","                ->method('getTemperature')","                ->will($this->returnValueMap($map));","                ","        $weather = new WeatherMonitor($service);","        ","        $this->assertEquals(23, $weather->getAverageTemperature('12:00', '14:00'));","    }    ","    ","    public function testCorrectAverageIsReturnedWithMockery()","    {","        $service = Mockery::mock(TemperatureService::class);     ","        ","        $service->shouldReceive('getTemperature')->once()->with('12:00')->andReturn(20);","        $service->shouldReceive('getTemperature')->once()->with('14:00')->andReturn(26);","        ","        $weather = new WeatherMonitor($service);","","        $this->assertEquals(23, $weather->getAverageTemperature('12:00', '14:00'));           ","    }    ","}","","","","",""],"id":1}],[{"start":{"row":10,"column":4},"end":{"row":11,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":11,"column":0},"end":{"row":11,"column":4},"action":"insert","lines":["    "]},{"start":{"row":11,"column":4},"end":{"row":11,"column":5},"action":"insert","lines":["/"]},{"start":{"row":11,"column":5},"end":{"row":11,"column":6},"action":"insert","lines":["/"]},{"start":{"row":11,"column":6},"end":{"row":11,"column":7},"action":"insert","lines":["M"]}],[{"start":{"row":11,"column":7},"end":{"row":11,"column":8},"action":"insert","lines":["o"],"id":3},{"start":{"row":11,"column":8},"end":{"row":11,"column":9},"action":"insert","lines":["c"]},{"start":{"row":11,"column":9},"end":{"row":11,"column":10},"action":"insert","lines":["k"]}],[{"start":{"row":11,"column":9},"end":{"row":11,"column":10},"action":"remove","lines":["k"],"id":4}],[{"start":{"row":11,"column":9},"end":{"row":11,"column":10},"action":"insert","lines":["c"],"id":5}],[{"start":{"row":11,"column":9},"end":{"row":11,"column":10},"action":"remove","lines":["c"],"id":6}],[{"start":{"row":11,"column":9},"end":{"row":11,"column":10},"action":"insert","lines":["k"],"id":7},{"start":{"row":11,"column":10},"end":{"row":11,"column":11},"action":"insert","lines":["e"]},{"start":{"row":11,"column":11},"end":{"row":11,"column":12},"action":"insert","lines":["r"]},{"start":{"row":11,"column":12},"end":{"row":11,"column":13},"action":"insert","lines":["y"]},{"start":{"row":11,"column":13},"end":{"row":11,"column":14},"action":"insert","lines":["を"]}],[{"start":{"row":11,"column":14},"end":{"row":11,"column":21},"action":"insert","lines":["使用しない場合"],"id":8}],[{"start":{"row":29,"column":4},"end":{"row":30,"column":0},"action":"insert","lines":["",""],"id":9},{"start":{"row":30,"column":0},"end":{"row":30,"column":4},"action":"insert","lines":["    "]},{"start":{"row":30,"column":4},"end":{"row":30,"column":6},"action":"insert","lines":["//"]}],[{"start":{"row":30,"column":6},"end":{"row":30,"column":7},"action":"insert","lines":["M"],"id":10},{"start":{"row":30,"column":7},"end":{"row":30,"column":8},"action":"insert","lines":["o"]},{"start":{"row":30,"column":8},"end":{"row":30,"column":9},"action":"insert","lines":["c"]},{"start":{"row":30,"column":9},"end":{"row":30,"column":10},"action":"insert","lines":["k"]},{"start":{"row":30,"column":10},"end":{"row":30,"column":11},"action":"insert","lines":["e"]},{"start":{"row":30,"column":11},"end":{"row":30,"column":12},"action":"insert","lines":["r"]},{"start":{"row":30,"column":12},"end":{"row":30,"column":13},"action":"insert","lines":["y"]}],[{"start":{"row":30,"column":13},"end":{"row":30,"column":14},"action":"insert","lines":["を"],"id":11}],[{"start":{"row":30,"column":14},"end":{"row":30,"column":20},"action":"insert","lines":["使用する場合"],"id":12}]]},"ace":{"folds":[],"scrolltop":371.34375,"scrollleft":0,"selection":{"start":{"row":30,"column":20},"end":{"row":30,"column":20},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":25,"state":"php-start","mode":"ace/mode/php"}},"timestamp":1582867398069,"hash":"f84783010287fd91658fff42c68786198b8816f1"}